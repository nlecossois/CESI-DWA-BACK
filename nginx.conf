events {
    worker_connections 1024;
}
 
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
 
    # Configuration des upstreams
    upstream user-service {
        server user-service:3000;
    }
 
    upstream restaurant-service {
        server restaurant-service:3001;
    }
 
    upstream client-services {
        server client-services:3002;
    }
 
    upstream livreur-services {
        server livreur-services:3003;
    }
 
    upstream articles-services {
        server articles-services:3004;
    }
 
    upstream commande-services {
        server commande-services:3005;
    }

    upstream auth-service {
        server auth-service:3006;
    }
 
    server {
        listen 80;
        server_name localhost;
 
        # Route d'authentification
        location /authenticate {
            internal;
            proxy_pass http://auth-service/authenticate;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
            proxy_set_header        Authorization $http_authorization;
            proxy_method POST;

            # Configuration CORS pour la route d'authentification
            add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
 
        # Routes publiques
        location /users/login {
            proxy_pass http://user-service/users/login;
        }
 
        location /users/register {
            proxy_pass http://user-service/users/register;
        }
 
        # Routes protégées
        location /users {
            auth_request /authenticate;
            proxy_pass http://user-service/users;
            proxy_set_header Authorization $http_authorization;
        }
 
        location /restaurant {
            auth_request /authenticate;
            proxy_pass http://restaurant-service;
            proxy_set_header Authorization $http_authorization;
        }
 
        location /client {
            auth_request /authenticate;
            proxy_pass http://client-services;
            proxy_set_header Authorization $http_authorization;
        }
 
        location /livreur {
            auth_request /authenticate;
            proxy_pass http://livreur-services;
            proxy_set_header Authorization $http_authorization;
        }
 
        location /articles {
            auth_request /authenticate;
            proxy_pass http://articles-services;
            proxy_set_header Authorization $http_authorization;
        }
 
        location /commande {
            auth_request /authenticate;
            proxy_pass http://commande-services;
            proxy_set_header Authorization $http_authorization;
        }
 
        # Gestion des erreurs
        error_page 401 = @error401;
        location @error401 {
            add_header Content-Type application/json;
            return 401 '{"error": "Non authentifié", "message": "Veuillez vous connecter"}';
        }
 
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
 
        # Configuration des timeouts
        proxy_connect_timeout 10s;
        proxy_read_timeout 30s;
        proxy_send_timeout 30s;
        send_timeout 30s;
    }
}
